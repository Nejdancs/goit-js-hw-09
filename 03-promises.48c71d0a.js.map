{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,UAAWF,SAASC,cAAc,0BAG9BE,EAAe,IAyCrB,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,SAAAA,EAAUC,MAAAA,IAEpBG,EAAO,CAAEJ,SAAAA,EAAUC,MAAAA,MAEpBA,MAjDPR,EAAKC,KAAKe,iBAAiB,UAE3B,SAAkBC,GAChBA,EAAEC,iBACFlB,EAAKI,UAAUe,UAAW,EAU1B,IARA,IAAAC,EAEIH,EADFI,OAAUC,EAAKF,EAALZ,MAAOe,EAAIH,EAAJG,KAAMC,EAAMJ,EAANI,OAGrBC,EAAWC,OAAOJ,EAAMK,OACtBC,EAAUF,OAAOH,EAAKI,OACtBE,EAAYH,OAAOF,EAAOG,OAEvBG,EAAI,EAAGA,GAAKD,EAAWC,GAAK,EAAGL,GAAYG,EAC9CE,IAAMD,GAmBZd,YAAW,WACTf,EAAKI,UAAUe,UAAW,IAnBdM,EAoBHpB,GAjBTC,EAAcwB,EAAGL,GACdM,MAAK,SAAAC,OAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MACjBV,EAAAmC,OAAOC,QAAS,qBAAmCC,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,MAAK,CAC5D4B,QAAS/B,OAGZgC,OAAM,SAAAL,OAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAClBV,EAAAmC,OAAOK,QAAS,oBAAkCH,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,MAAK,CAC3D4B,QAAS/B","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  submitBtn: document.querySelector('button[type=\"submit\"]'),\n};\n\nconst timeoutAlert = 3000;\n\nrefs.form.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  refs.submitBtn.disabled = true;\n\n  const {\n    target: { delay, step, amount },\n  } = e;\n\n  let delayVal = Number(delay.value);\n  const stepVal = Number(step.value);\n  const amountVal = Number(amount.value);\n\n  for (let i = 1; i <= amountVal; i += 1, delayVal += stepVal) {\n    if (i === amountVal) {\n      UnlockBtn(delayVal);\n    }\n\n    createPromise(i, delayVal)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`, {\n          timeout: timeoutAlert,\n        });\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`, {\n          timeout: timeoutAlert,\n        });\n      });\n  }\n}\n\nfunction UnlockBtn(delay) {\n  setTimeout(() => {\n    refs.submitBtn.disabled = false;\n  }, delay + timeoutAlert);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","submitBtn","$ce04d3a99e08e73b$var$timeoutAlert","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","disabled","_target","target","delay1","step","amount","delayVal","Number","value","stepVal","amountVal","i","then","param","Notify","success","concat","timeout","catch","failure"],"version":3,"file":"03-promises.48c71d0a.js.map"}