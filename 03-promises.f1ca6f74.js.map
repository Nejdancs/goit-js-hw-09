{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,UAAWF,SAASC,cAAc,0BAsCpC,SAASE,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,UAAEH,QAAUC,IAEpBG,EAAO,UAAEJ,QAAUC,MAEpBA,MAIP,SAASQ,EAAUR,GACjBO,YAAW,KACTd,EAAKI,UAAUY,UAAW,IACzBT,EApDgB,KAErBP,EAAKC,KAAKgB,iBAAiB,UAE3B,SAAkBC,GAChBA,EAAEC,iBACFnB,EAAKI,UAAUY,UAAW,EAK5B,UAA0BI,QAlB1Bb,MAkBoCc,EAlBpCC,KAkB2CA,EAlB3CC,OAkBiDA,KAC/C,IAAIC,EAAWC,OAAOJ,EAAMK,OAC5B,MAAMC,EAAUF,OAAOH,EAAKI,OACtBE,EAAYH,OAAOF,EAAOG,OAEhC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAWC,GAAK,EAAGL,GAAYG,EAC9CE,IAAMD,GACRb,EAAUS,GAGZnB,EAAcwB,EAAGL,GACdM,MAAK,EA7BZxB,SA6BeA,EA7BfC,MA6ByBA,MACjBT,EAAAiC,OAAOC,QAAQ,qBAAqB1B,QAAeC,MAAW,CAC5D0B,QAxBW,SA2BdC,OAAM,EAlCb5B,SAkCgBA,EAlChBC,MAkC0BA,MAClBT,EAAAiC,OAAOI,QAAQ,oBAAoB7B,QAAeC,MAAW,CAC3D0B,QA7BW,SAQnBG,CAAelB","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  submitBtn: document.querySelector('button[type=\"submit\"]'),\n};\n\nconst timeoutAlert = 3000;\n\nrefs.form.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  refs.submitBtn.disabled = true;\n\n  createPromises(e);\n}\n\nfunction createPromises({ target: { delay, step, amount } }) {\n  let delayVal = Number(delay.value);\n  const stepVal = Number(step.value);\n  const amountVal = Number(amount.value);\n\n  for (let i = 1; i <= amountVal; i += 1, delayVal += stepVal) {\n    if (i === amountVal) {\n      UnlockBtn(delayVal);\n    }\n\n    createPromise(i, delayVal)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`, {\n          timeout: timeoutAlert,\n        });\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`, {\n          timeout: timeoutAlert,\n        });\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction UnlockBtn(delay) {\n  setTimeout(() => {\n    refs.submitBtn.disabled = false;\n  }, delay + timeoutAlert);\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","submitBtn","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$47d4ff9957288465$var$UnlockBtn","disabled","addEventListener","e","preventDefault","target","delay1","step","amount","delayVal","Number","value","stepVal","amountVal","i","then","Notify","success","timeout","catch","failure","$47d4ff9957288465$var$createPromises"],"version":3,"file":"03-promises.f1ca6f74.js.map"}